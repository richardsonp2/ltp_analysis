library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
load_all()
load_all()
load_all()
load_all()
install.packages("MatrixModels")
install.packages("matrix")
load_all()
install.packages("Matrix")
install.packages("pbkrtest")
install.packages("MatrixModels")
install.packages("quantreg")
install.packages("car")
install.packages("rstatix")
remove.packages(c("ggpubr", "rstatix", "car", "quantreg", "MatrixModels"))
remove.packages("Matrix")
devtools::install_version("Matrix", version = "1.6.0")
load_all()
load_all()
install.packages("pbkrtest")
load_all()
library(devtools)
load_all()
install.packages("pbkrtest")
devtools::install_version("pbkrtest", version = "4.2.0")
devtools::install_version("pbkrtest", version = "4.2.0")
install.packages("pbkrtest")
version
install.packages("pbkrtest")
install.packages("lme4")
install.packages("lme4", dependencies = TRUE )
install.packages("pbkrtest", dependencies = TRUE)
load_all()
library(devtools)
install.packages("devtools")
library(devtools)
load_all()
library(devtools)
load_all()
load_all()
load_all()
install.packages("pbkrtest")
install.packages("pbkrtest", dependencies = TRUE)
install.packages("RcppEigen")
install.packages("lme4")
install.packages("pbkrtest")
load_all()
load_all()
exists("strsplit1", where = globalenv(), inherits = FALSE)
check()#
R.home()
?Startup
library(devtools)
load_all()
make_test_control_plot()
exists("make_test_control_plot", where = globalenv(), inherits = FALSE)
check()
install.packages("remotes")
install.packages("remotes")
library(remotes)
remotes::install_github("r-lib/roxygen2")
.rs.restartR()
packageVersion("roxygen2")
check()
check()
?filter
check()
? lm
check()
check()
check()
tools::showNonASCIIfile
check()
install(ggarrange)
install.packages("ggarrange")
check()
check()
check()
check()
check()
Sys.time()
Sys.timezone()
devtools::clean_dll()  # Clean compiled files
devtools::build()      # Rebuild the package
devtools::check()      # Re-run the checks
check()
check()
?row_number
?bind_cols
?ggarrange
?ggarrange
?n
?where
?where
check()
?plot_grid
check()
check()
usethis::edit_r_environ()
check()
check()
check()
check()
check()
check()
check()
load_all()
exists("strsplit1", where = globalenv(), inherits = FALSE)
check()
apamin_data_het <- read_csv_function("./inst/HET_apamin_longformat.csv")
unique_cells_het <- find_unique_cells(apamin_data_het)
unique_cells_vector_het_apamin <- as.vector(unique_cells_het)
ppt <- read_pptx()
library(officer)
ppt <- read_pptx()
#HET
# HET dataset
ppt <- Reduce(function(ppt, cell_id) {
print_try_function(ppt, cell_id, apamin_data_het)
}, unique_cells_vector_het_apamin, ppt)
print(ppt, target = "het_apamin_individual_cells_presentation.pptx")
check()
ppt <- read_pptx()
#HET
# HET dataset
ppt <- Reduce(function(ppt, cell_id) {
print_try_function(ppt, cell_id, apamin_data_het)
}, unique_cells_vector_het_apamin, ppt)
print(ppt, target = "het_apamin_individual_cells_presentation.pptx")
ppt <- read_pptx()
#HET
# HET dataset
ppt <- Reduce(function(ppt, cell_id) {
print_try_function(ppt, cell_id, apamin_data_het)
}, unique_cells_vector_het_apamin, ppt)
print(ppt, target = "het_apamin_individual_cells_presentation.pptx")
test_control_colors <- c("#000000","#FF0000")
ppt <- read_pptx()
#HET
# HET dataset
ppt <- Reduce(function(ppt, cell_id) {
print_try_function(ppt, cell_id, apamin_data_het)
}, unique_cells_vector_het_apamin, ppt)
print(ppt, target = "het_apamin_individual_cells_presentation.pptx")
warnings()
main_run(apamin_data_het,170613_1,ppt)
main_run(apamin_data_het,"170613_1",ppt)
run_main_diagnostic(apamin_data_het)
figure_grid <- run_main_diagnostic(apamin_data_het)
View(ppt)
generate_title(apamin_data_het)
apa_main_set <- main_run(apamin_data_het, "170613_1", ppt)
View(apa_main_set)
View(apa_main_set)
ppt
print_try_function(ppt,"170613_1",apamin_data_het)
print(ppt, target = "het_test_presentation.pptx")
check()
check()
check()
apamin_data_het <- read_csv_function("./inst/HET_apamin_longformat.csv")
unique_cells_het <- find_unique_cells(apamin_data_het)
unique_cells_vector_het_apamin <- as.vector(unique_cells_het)
ppt <- read_pptx()
#HET
# HET dataset
ppt <- Reduce(function(ppt, cell_id) {
print_try_function(ppt, cell_id, apamin_data_het)
}, unique_cells_vector_het_apamin, ppt)
print(ppt, target = "het_apamin_individual_cells_presentation.pptx")
test_control_colors <- c("#000000","#FF0000")
ppt <- read_pptx()
#HET
# HET dataset
ppt <- Reduce(function(ppt, cell_id) {
print_try_function(ppt, cell_id, apamin_data_het)
}, unique_cells_vector_het_apamin, ppt)
print(ppt, target = "het_apamin_individual_cells_presentation.pptx")
devtools::document()
devtools::document()
usethis::use_testthat(3)
use_r(read.csv.R)
# Create a reproducible example with 10 rows
set.seed(123)  # For reproducibility
dummy_data <- data.frame(
Key          = rep("LTP_APAMIN", 10),
Date         = rep(201697, 10),
Sex          = rep("Female", 10),
GT           = rep("WT", 10),
animal_id    = rep("25b06", 10),
cell_num     = 50:59,
Time         = seq(100, 190, by=10),  # Just an example sequence
Test         = runif(10, 0.1, 0.5),
PPR_test     = runif(10, 2, 3),
control      = runif(10, 0.1, 0.2),
PPR_control  = runif(10, 3, 6),
Rs           = runif(10, 30, 35),
Rin          = runif(10, 45, 55),
DC           = rnorm(10, mean = -1000, sd = 30)
)
dummy_data
# Create a reproducible example with 10 rows
set.seed(123)  # For reproducibility
dummy_data <- data.frame(
Key          = rep("LTP_APAMIN", 10),
Date         = rep("25a01", 10),
Sex          = rep("Female", 10),
GT           = rep("WT", 10),
animal_id    = rep(201697, 10),
cell_num     = 1:3,
Time         = seq(100, 190, by=10),  # Just an example sequence
Test         = runif(10, 0.1, 0.5),
PPR_test     = runif(10, 2, 3),
control      = runif(10, 0.1, 0.2),
PPR_control  = runif(10, 3, 6),
Rs           = runif(10, 30, 35),
Rin          = runif(10, 45, 55),
DC           = rnorm(10, mean = -1000, sd = 30)
)
# Create a reproducible example with 10 rows
set.seed(123)  # For reproducibility
dummy_data <- data.frame(
Key          = rep("LTP_APAMIN", 10),
Date         = rep("25a01", 10),
Sex          = rep("Female", 10),
GT           = rep("WT", 10),
animal_id    = rep(201697, 10),
cell_num     = 1:3,
Time         = seq(100, 190, by=10),  # Just an example sequence
Test         = runif(10, 0.1, 0.5),
PPR_test     = runif(10, 2, 3),
control      = runif(10, 0.1, 0.2),
PPR_control  = runif(10, 3, 6),
Rs           = runif(10, 30, 35),
Rin          = runif(10, 45, 55),
DC           = rnorm(10, mean = -1000, sd = 30)
)
dummy_data.R
# Create a reproducible example with 10 rows
set.seed(123)  # For reproducibility
sex_vec <- c(rep("Male", 30), rep("Female", 20))
date_vec <- c(rep("25a01", 10), rep("25a02", 10), rep("25a03", 20), rep("25a05", 10))
gt_vec <- c(rep("WT", 10),rep("HET", 10),rep("WT", 20),rep("HET", 10))
id_vec <- c(rep("111999", 10), rep("111998", 10), rep("111997", 20), rep("222888", 10))
cell_num_vec <- c(rep(1, 30), rep(2, 10), rep(1,10))
dummy_data <- data.frame(
Key          = rep("LTP_DUMMYDATA", 50),
Date         = date_vec,
Sex          = sex_vec,
GT           = gt_vec,
animal_id    = id_vec,
cell_num     = cell_num_vec,
Time         = seq(100, 190, by=10),  # Just an example sequence
Test         = runif(10, 0.1, 0.5),
PPR_test     = runif(10, 2, 3),
control      = runif(10, 0.1, 0.2),
PPR_control  = runif(10, 3, 6),
Rs           = runif(10, 30, 35),
Rin          = runif(10, 45, 55),
DC           = rnorm(10, mean = -1000, sd = 30)
)
dummy_data
View(dummy_data)
# Create a reproducible example with 10 rows
set.seed(123)  # For reproducibility
sex_vec <- c(rep("Male", 30), rep("Female", 20))
date_vec <- c(rep("25a01", 10), rep("25a02", 10), rep("25a03", 20), rep("25a05", 10))
gt_vec <- c(rep("WT", 10),rep("HET", 10),rep("WT", 20),rep("HET", 10))
id_vec <- c(rep("111999", 10), rep("111998", 10), rep("111997", 20), rep("222888", 10))
cell_num_vec <- c(rep(1, 30), rep(2, 10), rep(1,10))
dummy_data <- data.frame(
Key          = rep("LTP_DUMMYDATA", 50),
Date         = date_vec,
Sex          = sex_vec,
GT           = gt_vec,
animal_id    = id_vec,
cell_num     = cell_num_vec,
Time         = seq(100, 190, by=10),  # Just an example sequence
Test         = runif(50, 0.1, 0.5),
PPR_test     = runif(50, 2, 3),
control      = runif(50, 0.1, 0.2),
PPR_control  = runif(50, 3, 6),
Rs           = runif(50, 30, 35),
Rin          = runif(50, 45, 55),
DC           = rnorm(50, mean = 100, sd = 30)
)
dummy_data
# Create a reproducible example with 10 rows
set.seed(123)  # For reproducibility
sex_vec <- c(rep("Male", 30), rep("Female", 20))
date_vec <- c(rep("25a01", 10), rep("25a02", 10), rep("25a03", 20), rep("25a05", 10))
gt_vec <- c(rep("WT", 10),rep("HET", 10),rep("WT", 20),rep("HET", 10))
id_vec <- c(rep("111999", 10), rep("111998", 10), rep("111997", 20), rep("222888", 10))
cell_num_vec <- c(rep(1, 30), rep(2, 10), rep(1,10))
time_vec <- rep(c(-3, -2, -1, 0, 1, 2, 3, 4, 5, 6), times = 5)
dummy_data <- data.frame(
Key          = rep("LTP_DUMMYDATA", 50),
Date         = date_vec,
Sex          = sex_vec,
GT           = gt_vec,
animal_id    = id_vec,
cell_num     = cell_num_vec,
Time         = time_vec,
Test         = runif(50, 0.1, 0.5),
PPR_test     = runif(50, 2, 3),
control      = runif(50, 0.1, 0.2),
PPR_control  = runif(50, 3, 6),
Rs           = runif(50, 30, 35),
Rin          = runif(50, 45, 55),
DC           = rnorm(50, mean = 100, sd = 30)
)
dummy_data
test("tests/testthat/test-read_csv.R")
test_file("tests/testthat/test-read_csv.R")
test_file("tests/testthat/test-read_csv.R")
